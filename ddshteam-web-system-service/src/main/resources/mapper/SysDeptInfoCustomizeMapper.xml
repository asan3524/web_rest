<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ddshteam.web.system.service.dao.SysDeptCustomizeMapper">

	<sql id="sysDeptFields">
		id,
		name,
		parent_id,
		type_id,
		remark,
		order_num,
		status,
		create_time
	</sql>

	<resultMap id="sysDeptListMap" type="SysDepInfo">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="parent_id" property="parentId" />
		<result column="type_id" property="typeId" />
		<result column="remark" property="remark" />
		<result column="order_num" property="orderNum" />
		<result column="status" property="status" />
		<result column="create_time" property="createTime" />

		<collection property="userList" column="u_id" ofType="SysUserInfo">
			<id property="id" column="u_id" />
			<result property="account" column="u_account" />
			<result property="name" column="u_name" />
			<result property="email" column="u_email" />
			<result property="fax" column="u_fax" />
			<result property="phone" column="u_phone" />
			<result property="mobile" column="u_mobile" />
			<result property="isBuiltin" column="u_is_builtin" />
			<result property="orderNum" column="u_order_num" />
			<result property="status" column="u_status" />
			<result property="createTime" column="u_create_time" />
		</collection>
	</resultMap>

	<select id="getDeptList" resultMap="sysDeptListMap">
		select
		dept.id,
		dept.name,
		dept.parent_id,
		dept.type_id,
		dept.remark,
		dept.order_num,
		dept.status,
		dept.create_time,

		user.id as u_id,
		user.account as u_account,
		user.name as u_name,
		user.email as
		u_email,
		user.fax as u_fax,
		user.phone as u_phone,
		user.mobile as
		u_mobile,
		user.is_builtin as u_is_builtin,
		user.order_num as
		u_order_num,
		user.status as u_status,
		user.create_time as u_create_time

		from
		sys_dep_info dept
		left join sys_user_info user
		on dept.id = user.dep_id
		<where>
			1=1
			<!-- <if test="name != null and name != ''"> AND name LIKE CONCAT('%',#{name},'%') 
				</if> -->
			AND dept.status = 1
			ORDER BY dept.create_time DESC
		</where>
	</select>

	<select id="getChildrenDeptList" resultMap="sysDeptListMap">
		select
		dept.id,
		dept.name,
		dept.parent_id,
		dept.type_id,
		dept.remark,
		dept.order_num,
		dept.status,
		dept.create_time,

		user.id as u_id,
		user.account as u_account,
		user.name as u_name,
		user.email as
		u_email,
		user.fax as u_fax,
		user.phone as u_phone,
		user.mobile as
		u_mobile,
		user.is_builtin as u_is_builtin,
		user.order_num as
		u_order_num,
		user.status as u_status,
		user.create_time as u_create_time

		from
		sys_dep_info dept
		left join sys_user_info user
		on dept.id = user.dep_id
		<where>
			1=1
			<!-- <if test="name != null and name != ''"> AND name LIKE CONCAT('%',#{name},'%') 
				</if> -->
			AND dept.status = 1
			AND dept.parent_id=#{deptId}
			ORDER BY
			dept.create_time DESC
		</where>
	</select>

	<select id="getSysDeptById" resultMap="sysDeptListMap">
		select
		dept.id,
		dept.name,
		dept.parent_id,
		dept.type_id,
		dept.remark,
		dept.order_num,
		dept.status,
		dept.create_time,

		user.id as u_id,
		user.account as u_account,
		user.name
		as u_name,
		user.email as
		u_email,
		user.fax as u_fax,
		user.phone as
		u_phone,
		user.mobile as
		u_mobile,
		user.is_builtin as u_is_builtin,
		user.order_num as
		u_order_num,
		user.status as u_status,
		user.create_time
		as u_create_time

		from sys_dep_info dept
		left join sys_user_info user
		on
		dept.id = user.dep_id
		where dept.id=#{deptId}
	</select>

	<insert id="saveDept" parameterType="SysDepInfo">
		insert into sys_dep_info(
		<include refid="sysDeptFields" />
		)
		values(
		REPLACE(UUID(), '-', ''),
		#{name},
		#{parentId},
		#{typeId},
		#{remark},
		#{orderNum},
		#{status},
		now()
		)
	</insert>

	<insert id="saveDeptList" parameterType="java.util.List">
		insert into sys_dep_info(
		<include refid="sysDeptFields" />
		)
		values
		<foreach collection="sysDepts" item="item" index="index"
			separator=",">
			(
			REPLACE(UUID(), '-', ''),
			#{item.name, jdbcType=VARCHAR},
			#{item.parentId, jdbcType=VARCHAR},
			#{item.typeId, jdbcType=VARCHAR},
			#{item.remark, jdbcType=VARCHAR},
			#{item.orderNum, jdbcType=INTEGER},
			#{item.status, jdbcType=INTEGER},
			now()
			)
		</foreach>
	</insert>

	<update id="updateDept" parameterType="SysDepInfo">
		UPDATE sys_dep_info
		<trim prefix="SET" suffixOverrides=",">
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="parentId != null and parentId != ''">
				parent_id = #{parentId},
			</if>
			<if test="typeId != null and typeId != ''">
				type_id = #{typeId},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark},
			</if>
			<if test="orderNum != null">
				order_num = #{orderNum},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
		</trim>
		<where>
			id=#{id}
		</where>
	</update>

	<delete id="deleteDept">
		call
		delete_dept_childrens(#{deptId,jdbcType=VARCHAR})
	</delete>

	<select id="isDeptHasUser" parameterType="string" resultType="int">
		select count(1) as total
		from sys_user_info u
		where u.dep_id=#{deptId}
	</select>


	<resultMap id="TreeBaseResultMap" type="com.ddshteam.web.system.service.api.data.Tree">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="parent_id" jdbcType="VARCHAR" property="parentId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="isLeaf" jdbcType="INTEGER" property="isLeaf" />
	</resultMap>
	<sql id="Tree_Base_Column_List">
		p.id, p.parent_id, p.name, 1 > count(c.id) as isLeaf
	</sql>
	<!-- select p.id, p.parent_id, p.name, count(c.id) > 0 as isLeaf from sys_dep_info 
		p left join sys_dep_info c on p.id=c.parent_id group by p.id; -->
	<select id="selectTreeByPrimaryKey" parameterType="java.lang.String"
		resultMap="TreeBaseResultMap">
		select
		p.id, p.parent_id, p.name, 1> count(c.id) as isLeaf
		from sys_dep_info p left join sys_dep_info c on
		p.id=c.parent_id
		where
		p.parent_id = #{id,jdbcType=VARCHAR} group by
		p.id
	</select>

	<resultMap id="BaseResultMap"
		type="com.ddshteam.web.system.service.api.data.DeptInfoResp">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="parent_id" jdbcType="VARCHAR" property="parentId" />
		<result column="type_id" jdbcType="VARCHAR" property="typeId" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="order_num" jdbcType="INTEGER" property="orderNum" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="depttypename" jdbcType="VARCHAR" property="depttypename" />
	</resultMap>

	<sql id="Base_Column_List">
		sdi.id as id, sdi.name as  name, sdi.parent_id as parent_id, sdi.type_id as type_id, sdi.remark as remark, sdi.order_num as order_num, sdi.status as status,
		sdi.create_time as create_time,sdti.name as depttypename
	</sql>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<select id="selectByExample"
		parameterType="com.ddshteam.web.system.service.api.model.SysDepInfoCriteria"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from sys_dep_info sdi,sys_deptype_info sdti
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			and sdi.type_id=sdti.id order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_dep_info sdi,sys_deptype_info sdti
		where sdi.id = #{id,jdbcType=VARCHAR} and sdi.type_id=sdti.id
	</select>

</mapper>