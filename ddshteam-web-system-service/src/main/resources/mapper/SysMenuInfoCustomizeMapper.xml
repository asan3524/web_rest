<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ddshteam.web.system.service.dao.SysMenuInfoCustomizeMapper">
	<resultMap id="BaseResultMap"
		type="com.ddshteam.web.system.service.api.model.SysMenuInfo">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="parent_id" jdbcType="VARCHAR" property="parentId" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="url" jdbcType="VARCHAR" property="url" />
		<result column="perms" jdbcType="VARCHAR" property="perms" />
		<result column="icon" jdbcType="VARCHAR" property="icon" />
		<result column="order_num" jdbcType="INTEGER" property="orderNum" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, parent_id, type, url, perms, icon, order_num
	</sql>
	<resultMap id="treeMap" type="com.ddshteam.web.system.service.api.data.Tree">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="parent_id" jdbcType="VARCHAR" property="parentId" />
		<result column="url" jdbcType="VARCHAR" property="url" />
		<result column="icon" jdbcType="VARCHAR" property="iconClass" />
		<result column="checkStatus" jdbcType="INTEGER" property="checkStatus" />
		<result column="isLeaf" jdbcType="INTEGER" property="isLeaf" />
	</resultMap>
	<select id="getMenusByUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_menu_info sm
		where sm.type != 3 and sm.id in (
		select distinct
		menu_id
		from sys_role_to_menu r2m
		where r2m.role_id in (
		select role_id
		from sys_role_to_user r2u
		where r2u.user_id=#{userId}
		)
		)
	</select>
	<select id="getPermissionByUser" resultType="java.lang.String">
		select
		perms
		from
		sys_menu_info sm
		where sm.type = 3 and sm.id in (
		select
		distinct menu_id
		from sys_role_to_menu r2m
		where r2m.role_id in (
		select
		role_id
		from
		sys_role_to_user r2u
		where r2u.user_id=#{userId}
		)
		)
	</select>
	<select id="getMenuTreeByUserRole" resultMap="treeMap">
		select
		smi.id,smi.name,smi.parent_id,smi.url,smi.icon,smi.type=3 as
		isLeaf,srm1.id is not null as checkStatus from sys_menu_info smi
		inner
		join sys_role_to_menu srm
		on smi.id=srm.menu_id
		inner join
		sys_role_to_user sru
		on srm.role_id=sru.role_id and
		sru.user_id=#{userId}
		left join sys_role_to_menu srm1
		on
		smi.id=srm1.menu_id and srm1.role_id=#{roleId}
	</select>
	<select id="getMenuTreeByRole" resultMap="treeMap">
		select
		smi.id,smi.name,smi.parent_id,smi.url,smi.icon,smi.type=3 as
		isLeaf,srm1.id is not null as checkStatus from sys_menu_info smi
		inner
		join sys_role_to_menu srm
		on smi.id=srm.menu_id
		left join
		sys_role_to_menu srm1
		on smi.id=srm1.menu_id and srm1.role_id=#{roleId}
	</select>
	<select id="getMenuTreeByUser" resultMap="treeMap">
		select
		smi.id,smi.name,smi.parent_id,smi.url,smi.icon,smi.type=3 as
		isLeaf,false as checkStatus from sys_menu_info smi
		inner
		join
		sys_role_to_menu srm
		on smi.id=srm.menu_id
		inner join
		sys_role_to_user
		sru
		on srm.role_id=sru.role_id and
		sru.user_id=#{userId}
	</select>
	<select id="getMenuTree" resultMap="treeMap">
		select
		id,name,parent_id,url,icon,type=3 as
		isLeaf,false as checkStatus from
		sys_menu_info
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!--delete from sys_role_to_menu where menu_check_parent(#{id,jdbcType=VARCHAR},
		menu_id) or id=#{id,jdbcType=VARCHAR};
		delete from sys_menu_info where menu_check_parent(#{id,jdbcType=VARCHAR},
		id) or id=#{id,jdbcType=VARCHAR} -->
		call delete_menu_childrens(#{id,jdbcType=VARCHAR})
	</delete>
</mapper>