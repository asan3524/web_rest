<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ddshteam.web.system.service.dao.SysUserInfoCustomizeMapper">

	<sql id="sysUserFields">
		id,
		account,
		password,
		name,
		email,
		fax,
		phone,
		mobile,
		dep_id,
		is_builtin,
		order_num,
		status,
		create_time
	</sql>

	<resultMap id="sysUserListMap" type="SysUser">
		<id column="id" property="id" />
		<result column="account" property="account" />
		<result column="password" property="password" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="fax" property="fax" />
		<result column="phone" property="phone" />
		<result column="mobile" property="mobile" />
		<result column="dep_id" property="depId" />
		<result column="is_builtin" property="isBuiltin" />
		<result column="order_num" property="orderNum" />
		<result column="status" property="status" />
		<result column="create_time" property="createTime" />

		<result property="dept.id" column="d_id" />
		<result property="dept.name" column="d_name" />
		<result property="dept.parentId" column="d_parent_id" />
		<result property="dept.typeId" column="d_type_id" />
		<result property="dept.remark" column="d_remark" />
		<result property="dept.orderNum" column="d_order_num" />
		<result property="dept.status" column="d_status" />
		<result property="dept.createTime" column="d_create_time" />

		<collection property="roles" column="r_id" ofType="SysRole">
			<id property="id" column="r_id" />
			<result property="name" column="r_name" />
			<result property="remark" column="r_remark" />
			<result property="createTime" column="r_create_time" />
		</collection>
	</resultMap>

	<select id="getUserList" resultMap="sysUserListMap">
		select
		user.id,
		user.account,
		user.password,
		user.name,
		user.email,
		user.fax,
		user.phone,
		user.mobile,
		user.dep_id,
		user.is_builtin,
		user.order_num,
		user.status,
		user.create_time,

		dept.id as d_id,
		dept.name as d_name,
		dept.parent_id as d_parent_id,
		dept.type_id as d_type_id,
		dept.remark as d_remark,
		dept.order_num as d_order_num,
		dept.status as d_status,
		dept.create_time as d_create_time,

		role.id as r_id,
		role.name as r_name,
		role.remark as r_remark,
		role.create_time as r_create_time

		from sys_user_info user
		left join sys_dep_info dept
		on user.dep_id=dept.id
		left join sys_role_to_user r2u
		on user.id=r2u.user_id
		left join sys_role_info role
		on role.id=r2u.role_id
		<where>
			1=1
			<if test="name != null and name != ''">
				AND user.name LIKE CONCAT('%',#{name},'%')
			</if>
			<if test="depId != null and depId != ''">
				AND user.dep_id = #{depId}
			</if>
			AND user.status=1
			AND user.is_builtin=0
			ORDER BY user.create_time DESC
		</where>
	</select>

	<select id="getUserByAccount" resultMap="sysUserListMap">
		select
		user.id,
		user.account,
		user.password,
		user.name,
		user.email,
		user.fax,
		user.phone,
		user.mobile,
		user.dep_id,
		user.is_builtin,
		user.order_num,
		user.status,
		user.create_time,

		dept.id as d_id,
		dept.name as d_name,
		dept.parent_id as d_parent_id,
		dept.type_id as d_type_id,
		dept.remark as d_remark,
		dept.order_num as d_order_num,
		dept.status as d_status,
		dept.create_time as d_create_time,

		role.id as r_id,
		role.name as r_name,
		role.remark as r_remark,
		role.create_time as r_create_time

		from sys_user_info user
		left join sys_dep_info dept
		on user.dep_id=dept.id
		left join sys_role_to_user r2u
		on user.id=r2u.user_id
		left join sys_role_info role
		on role.id=r2u.role_id
		where user.account=#{account}
	</select>

	<select id="getUserById" resultMap="sysUserListMap">
		select
		user.id,
		user.account,
		user.password,
		user.name,
		user.email,
		user.fax,
		user.phone,
		user.mobile,
		user.dep_id,
		user.is_builtin,
		user.order_num,
		user.status,
		user.create_time,

		dept.id as d_id,
		dept.name as d_name,
		dept.parent_id as d_parent_id,
		dept.type_id as d_type_id,
		dept.remark as d_remark,
		dept.order_num as d_order_num,
		dept.status as d_status,
		dept.create_time as d_create_time,

		role.id as r_id,
		role.name as r_name,
		role.remark as r_remark,
		role.create_time as r_create_time

		from sys_user_info user
		left join sys_dep_info dept
		on user.dep_id=dept.id
		left join sys_role_to_user r2u
		on user.id=r2u.user_id
		left join sys_role_info role
		on role.id=r2u.role_id
		where user.id=#{userId}
	</select>

	<insert id="saveUserNoRole">
		insert into sys_user_info(
		<include refid="sysUserFields" />
		)
		values(
		#{id},   <!--分布式id生成 -->
		#{account},
		#{password},
		#{name},
		#{email},
		#{fax},
		#{phone},
		#{mobile},
		#{depId},
		#{isBuiltin},
		#{orderNum},
		#{status},
		#{createTime}
		)
	</insert>

	<insert id="saveUser">
		insert into sys_user_info(
		<include refid="sysUserFields" />
		)
		values(
		#{id},   <!--分布式id生成 -->
		#{account},
		#{password},
		#{name},
		#{email},
		#{fax},
		#{phone},
		#{mobile},
		#{depId},
		#{isBuiltin},
		#{orderNum},
		#{status},
		#{createTime}
		);
		insert into sys_role_to_user
		(
		id,
		user_id,
		role_id
		)
		values
		<foreach collection="roleIds" item="item" index="index"
			separator=",">
			(
			REPLACE(UUID(), '-', ''),
			#{id},
			#{item} <!--可以使用param1 param2 -->
			)
		</foreach>
		;
	</insert>

	<update id="updateUserNoRole">
		UPDATE sys_user_info
		<trim prefix="SET" suffixOverrides=",">
			<if test="email != null and email != ''">
				email = #{email},
			</if>
			<if test="fax != null and fax != ''">
				fax = #{fax},
			</if>
			<if test="phone != null and phone != ''">
				phone = #{phone},
			</if>
			<if test="mobile != null and mobile != ''">
				mobile = #{mobile},
			</if>
			<if test="depId != null and depId != ''">
				dep_id = #{depId},
			</if>
			<if test="isBuiltin != null">
				is_builtin = #{isBuiltin},
			</if>
			<if test="orderNum != null">
				order_num = #{orderNum},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			ß
		</trim>
		<where>
			id=#{id}
		</where>
	</update>

	<update id="updateUser">
		UPDATE sys_user_info
		<trim prefix="SET" suffixOverrides=",">
			<if test="email != null and email != ''">
				email = #{email},
			</if>
			<if test="fax != null and fax != ''">
				fax = #{fax},
			</if>
			<if test="phone != null and phone != ''">
				phone = #{phone},
			</if>
			<if test="mobile != null and mobile != ''">
				mobile = #{mobile},
			</if>
			<if test="depId != null and depId != ''">
				dep_id = #{depId},
			</if>
			<if test="isBuiltin != null">
				is_builtin = #{isBuiltin},
			</if>
			<if test="orderNum != null">
				order_num = #{orderNum},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
		</trim>
		<where>
			id=#{id}
		</where>
		;
		delete from sys_role_to_user WHERE user_id=#{id};
		insert into sys_role_to_user
		(
		id,
		user_id,
		role_id
		)
		values
		<foreach collection="roleIds" item="item" index="index"
			separator=",">
			(
			REPLACE(UUID(), '-', ''),
			#{id},
			#{item} <!--可以使用param1 param2 -->
			)
		</foreach>
		;
	</update>

	<update id="updatePassword">
		UPDATE sys_user_info
		<trim prefix="SET" suffixOverrides=",">
			<if test="newPassword != null and newPassword != ''">
				password = #{newPassword},
			</if>
		</trim>
		<where>
			id=#{userId}
		</where>
	</update>

	<!-- <delete id="deleteUser"> DELETE FROM sys_user_info WHERE id=#{userId}; 
		DELETE FROM sys_role_to_user WHERE user_id=#{userId}; </delete> -->

	<!-- 删除用户改为使用户失效 -->
	<update id="deleteUser">
		UPDATE sys_user_info
		<trim prefix="SET" suffixOverrides=",">
			status = 0,
		</trim>
		<where>
			id=#{userId}
		</where>
		;
		DELETE FROM sys_role_to_user WHERE user_id=#{userId};
	</update>

	<delete id="setUserRole">
		delete from sys_role_to_user WHERE user_id=#{userId};
		insert into sys_role_to_user
		(
		id,
		user_id,
		role_id
		)
		values
		<foreach collection="roleIds" item="item" index="index"
			separator=",">
			(
			REPLACE(UUID(), '-', ''),
			#{userId},
			#{item} <!--可以使用param1 param2 -->
			)
		</foreach>
		;
	</delete>
</mapper>