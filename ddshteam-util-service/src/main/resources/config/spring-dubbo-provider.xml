<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context  
	   http://www.springframework.org/schema/context/spring-context-3.2.xsd  
	   http://www.springframework.org/schema/util   
	   http://www.springframework.org/schema/util/spring-util-3.1.xsd  
	   http://www.springframework.org/schema/mvc  
	   http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <dubbo:application name="provider" />
	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="ddshteam-util-provider" />
	<!-- 监控中心 -->
	<dubbo:monitor protocol="registry" />

	<!-- 使用zookeeper注册中心暴露服务地址 1）register是否向此注册中心注册服务，如果设为false，将只订阅，不注册。 2）check注册中心不存在时，是否报错。 
		3）subscribe是否向此注册中心订阅服务，如果设为false，将只注册，不订阅。 4）timeout注册中心请求超时时间(毫秒)。 5）address可以Zookeeper集群配置，地址可以多个以逗号隔开等。 
		dubbo:service标签的一些属性说明： 1）interface服务接口的路径 2）ref引用对应的实现类的Bean的ID 3）registry向指定注册中心注册，在多个注册中心时使用，值为<dubbo:registry>的id属性，多个注册中心ID用逗号分隔，如果不想将该服务注册到任何registry，可将值设为N/A 
		4）register 默认true ，该协议的服务是否注册到注册中心。 -->
	<dubbo:registry protocol="zookeeper" address="127.0.0.1:2181"
		check="true" subscribe="true" timeout="1200000" />

	<!-- 用dubbo协议在20878端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="20873" />

	<!-- 扫描注册包路径,多个包用逗号隔开(基于注解) 注意：基于包扫描一次性暴露服务的方式在2.5.4及之前导致@Transactional 
		注解失效 -->
	<dubbo:annotation package="com.ddsh.util.service.impl" />
</beans>